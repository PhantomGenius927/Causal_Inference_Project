---
title: "Final Project"
author: "Edison Hu"
format: pdf
editor: visual
date: (\today)
execute: 
  warning: false
  message: false
---

```{r, echo=FALSE}
library(fixest)
library(peacesciencer)
library(ggplot2)
library(tidyverse)
library(did)
library(HonestDiD)
```

```{r For Honest DiD}
#' @title honest_did
#'
#' @description a function to compute a sensitivity analysis
#'  using the approach of Rambachan and Roth (2021)
honest_did <- function(...) UseMethod("honest_did")

#' @title honest_did.AGGTEobj
#'
#' @description a function to compute a sensitivity analysis
#'  using the approach of Rambachan and Roth (2021) when
#'  the event study is estimating using the `did` package
#'
#' @param e event time to compute the sensitivity analysis for.
#'  The default value is `e=0` corresponding to the "on impact"
#'  effect of participating in the treatment.
#' @param type Options are "smoothness" (which conducts a
#'  sensitivity analysis allowing for violations of linear trends
#'  in pre-treatment periods) or "relative_magnitude" (which
#'  conducts a sensitivity analysis based on the relative magnitudes
#'  of deviations from parallel trends in pre-treatment periods).
#' @inheritParams HonestDiD::createSensitivityResults
#' @inheritParams HonestDid::createSensitivityResults_relativeMagnitudes
honest_did.AGGTEobj <- function(es,
                                e          = 0,
                                type       = c("smoothness", "relative_magnitude"),
                                gridPoints = 100,
                                ...) {

  type <- match.arg(type)

  # Make sure that user is passing in an event study
  if (es$type != "dynamic") {
    stop("need to pass in an event study")
  }

  # Check if used universal base period and warn otherwise
  if (es$DIDparams$base_period != "universal") {
    stop("Use a universal base period for honest_did")
  }

  # Recover influence function for event study estimates
  es_inf_func <- es$inf.function$dynamic.inf.func.e

  # Recover variance-covariance matrix
  n <- nrow(es_inf_func)
  V <- t(es_inf_func) %*% es_inf_func / n / n

  # Check time vector is consecutive with referencePeriod = -1
  referencePeriod <- -1
  consecutivePre  <- !all(diff(es$egt[es$egt <= referencePeriod]) == 1)
  consecutivePost <- !all(diff(es$egt[es$egt >= referencePeriod]) == 1)
  if ( consecutivePre | consecutivePost ) {
    msg <- "honest_did expects a time vector with consecutive time periods;"
    msg <- paste(msg, "please re-code your event study and interpret the results accordingly.", sep="\n")
    stop(msg)
  }

  # Remove the coefficient normalized to zero
  hasReference <- any(es$egt == referencePeriod)
  if ( hasReference ) {
    referencePeriodIndex <- which(es$egt == referencePeriod)
    V    <- V[-referencePeriodIndex,-referencePeriodIndex]
    beta <- es$att.egt[-referencePeriodIndex]
  } else {
    beta <- es$att.egt
  }

  nperiods <- nrow(V)
  npre     <- sum(1*(es$egt < referencePeriod))
  npost    <- nperiods - npre
  if ( !hasReference & (min(c(npost, npre)) <= 0) ) {
    if ( npost <= 0 ) {
      msg <- "not enough post-periods"
    } else {
      msg <- "not enough pre-periods"
    }
    msg <- paste0(msg, " (check your time vector; note honest_did takes -1 as the reference period)")
    stop(msg)
  }

  baseVec1 <- basisVector(index=(e+1),size=npost)
  orig_ci  <- constructOriginalCS(betahat        = beta,
                                  sigma          = V,
                                  numPrePeriods  = npre,
                                  numPostPeriods = npost,
                                  l_vec          = baseVec1)

  if (type=="relative_magnitude") {
    robust_ci <- createSensitivityResults_relativeMagnitudes(betahat        = beta,
                                                             sigma          = V,
                                                             numPrePeriods  = npre,
                                                             numPostPeriods = npost,
                                                             l_vec          = baseVec1,
                                                             gridPoints     = gridPoints,
                                                             ...)

  } else if (type == "smoothness") {
    robust_ci <- createSensitivityResults(betahat        = beta,
                                          sigma          = V,
                                          numPrePeriods  = npre,
                                          numPostPeriods = npost,
                                          l_vec          = baseVec1,
                                          ...)
  }

  return(list(robust_ci=robust_ci, orig_ci=orig_ci, type=type))
}
```

##Data Wrangling

```{r Data Wrangling}
ids <- c("ccode1", "ccode2", "country1", "country2", "year")
#-------------------------------------------------------------------------------
# Outcome Variable
#-------------------------------------------------------------------------------
## MID onsets
dyadyrs <- create_dyadyears(directed = FALSE, subset_years = c(1945:2010)) %>%
  add_cow_mids() %>%
  mutate(
    country1 = countrycode::countrycode(ccode1, 
                                        origin = "cown", destination = "iso3c"),
    country2 = countrycode::countrycode(ccode2, 
                                        origin = "cown", destination = "iso3c")  
    ) %>%
  select(all_of(ids), cowmidonset)
#-------------------------------------------------------------------------------
# Explanatory Variable
#-------------------------------------------------------------------------------
## regime change
polityIV <- readxl::read_xls(here::here("raw data/p4v2018.xls"))
polityIV <- polityIV %>%
  select(ccode, year, durable) %>%
  mutate(ccode2 = ccode) %>%
  rename(ccode1 = ccode)

dyadyrs <- left_join(dyadyrs, polityIV, by = c("ccode1", "year"))
dyadyrs <- dyadyrs %>%
  select(-ccode2.y) %>%
  rename(durable1 = durable,
         ccode2 = ccode2.x)
dyadyrs <- left_join(dyadyrs, polityIV, by = c("ccode2", "year"))
dyadyrs <- dyadyrs %>%
  select(-ccode1.y) %>%
  rename(durable2 = durable,
         ccode1 = ccode1.x)

dyadyrs <- dyadyrs %>%
  mutate(
    regcha1 = ifelse(durable1 == 0, 1, 0),
    regcha2 = ifelse(durable2 == 0, 1, 0),
    regcha_uni = ifelse(regcha1 == 1 | regcha2 == 1, 1, 0)
    #regcha_bi = ifelse(regcha1 == 1 & regcha2 == 1, 1, 0)
    ) %>%
  select(all_of(ids), cowmidonset, regcha_uni)

## foreign policy similarity
dyadyrs <- dyadyrs %>%
  add_fpsim() %>%
  select(all_of(ids), cowmidonset, regcha_uni, piva, kappava)
#-------------------------------------------------------------------------------
# Covariates
#-------------------------------------------------------------------------------
## alliance
dyadyrs <- dyadyrs %>%
  add_cow_alliance() %>%
  mutate(
    alliance = ifelse(cow_defense == 1 | cow_neutral== 1 | cow_nonagg == 1 | cow_entente == 1, 1, 0)
  ) %>%
  select(-c(cow_defense, cow_neutral, cow_nonagg, cow_entente))

## major power
dyadyrs <- dyadyrs %>%
  add_cow_majors() %>%
  mutate(major = ifelse(cowmaj1 == 1 | cowmaj2 == 1, 1, 0)) %>%
  select(-c(cowmaj1, cowmaj2))

## strategic rivalry
v_ids <- names(dyadyrs)
dyadyrs <- dyadyrs %>%
  add_strategic_rivalries() %>%
  select(all_of(v_ids), ongoingrivalry)

## distance
dyadyrs <- dyadyrs %>%
  add_minimum_distance()

## GDP per capita & Trade
v_ids <- names(dyadyrs)
dyadyrs <- dyadyrs %>%
  add_sdp_gdp() %>%
  add_cow_trade() %>%
  mutate(
    gdppc = wbgdppc2011est1 + wbgdppc2011est2,
    trade = flow1 + flow2
  ) %>%
  group_by(year) %>%
  mutate(
    gdppc_dyd = (gdppc - mean(gdppc, na.rm = TRUE)) / sd(gdppc, na.rm = TRUE),
    trade_dyd = (trade - mean(trade, na.rm = TRUE)) / sd(trade, na.rm = TRUE)
  ) %>%
  ungroup() 
dyadyrs <- dyadyrs %>%
  select(all_of(v_ids), gdppc, gdppc_dyd, trade, trade_dyd)
  
## Capability ratio
v_ids <- names(dyadyrs)
nmc_sy <- cow_nmc %>%
  rename(ccode1 = ccode,
         nc1 = cinc) %>%
  select(ccode1, year, nc1)
dyadyrs <- left_join(dyadyrs, nmc_sy, by = c("ccode1", "year"))

nmc_sy <- nmc_sy %>%
  rename(ccode2 = ccode1,
         nc2 = nc1)
dyadyrs <- left_join(dyadyrs, nmc_sy, by = c("ccode2", "year"))
dyadyrs <- dyadyrs %>%
  mutate(
    nc = abs(nc1 - nc2)
    ) %>%
  group_by(year) %>%
  mutate(
    nmc_dyd = (nc - mean(nc, na.rm = TRUE)) / sd(nc, na.rm = TRUE)
    ) %>%
  ungroup() %>%
  select(all_of(v_ids), nc, nmc_dyd)
#-------------------------------------------------------------------------------
# create unique id
#-------------------------------------------------------------------------------
dyadyrs <- dyadyrs %>%
  mutate(
    id = paste(ccode1, ccode2, sep = "0")
  )
```

# Treatment Year

```{r Treatment Year}
## treated year with single and multi-entry year
dyadyrs <- dyadyrs %>%
  group_by(id) %>%
  mutate(
    regchayr = ifelse(regcha_uni == 1, year, NA),
    treatyr_sing = min(regchayr, na.rm = TRUE)
    ) %>%
  ungroup() %>%
  select(-regchayr)
```

## Descriptive Analysis

```{r}
#-------------------------------------------------------------------------------
# Aggregate Average-Year Data
#-------------------------------------------------------------------------------
da <- dyadyrs %>%
  group_by(year) %>%
  summarise(
    onset = sum(cowmidonset, na.rm = TRUE),
    regime = sum(regcha_uni, na.rm = TRUE),
    avg_kappava = mean(kappava, na.rm = TRUE),
    sd_kappava = sd(kappava, na.rm = TRUE),
    alliance = sum(alliance, na.rm = TRUE),
    major = sum(major, na.rm = TRUE),
    rivalry = sum(ongoingrivalry, na.rm = TRUE),
    avg_gdppc = mean(gdppc, na.rm = TRUE),
    sd_gdppc = sd(gdppc, na.rm = TRUE),
    avg_trade = mean(trade, na.rm = TRUE),
    sd_trade = sd(trade, na.rm = TRUE),
    avg_nmc = mean(nc, na.rm = TRUE),
    sd_nmc = sd(nc, na.rm = TRUE)
  )
#-------------------------------------------------------------------------------
# plotting
#-------------------------------------------------------------------------------
# Onsets
ggplot(data = da) +
  geom_line(aes(x = year, y = onset), color = "darkred", linewidth = 0.7) + 
  labs(
    x = "Year",
    y = "Numbers of Onsets",
    caption = "Source: Correlates of War (CoW) Militarized Interstate Dispute (MID) project. (V5.0)"
  ) + 
  ggthemes::theme_clean(base_size = 11) + 
  theme(text = element_text(family = "Crimson Text"))
ggsave(filename = here::here("plots/onset.png"), device = "png", 
        width = 5, height = 3, units = "in", dpi = 300, limitsize = FALSE)

# Regime Change
ggplot(data = da) +
  geom_line(aes(x = year, y = regime), color = "darkgoldenrod1", linewidth = 0.7) + 
  labs(
    x = "Year",
    y = "Numbers of Dyads with Regime Change",
    caption = "Source: Polity IV Project (2018)"
  ) + ggthemes::theme_clean(base_size = 11) + 
  theme(text = element_text(family = "Crimson Text"))
ggsave(filename = here::here("plots/regime1945.png"), device = "png", 
        width = 5, height = 3, units = "in", dpi = 300, limitsize = FALSE)
```


## Effect Size

```{r Effect Size}
ees <- feols(cowmidonset ~ regcha_uni | year + ccode1 + ccode2, data = dyadyrs)
etable(ees, file = here::here("tables/ees.tex"), view = TRUE)

mde <- pwr::pwr.t.test(n = n_distinct(dyadyrs)/2, d = NULL, 
                       sig.level = 0.05, power = 0.8, 
                       type="two.sample", alternative="two.sided")

font <- "Crimson Text" # Change to your desired font
png(file.path("plots", "mde.png"), res = 300, width = 5, height = 3, units = "in")
par(family = font)
plot(mde)
dev.off()
```

## Parallel Trend Analysis

```{r Parallel Trend Analysis}
#-------------------------------------------------------------------------------
# single entry
#-------------------------------------------------------------------------------
pta <- dyadyrs %>%
  group_by(id) %>%
  mutate(
    mid = cowmidonset - lag(cowmidonset)
  ) %>%
  summarise(
    avg_mid = mean(mid, na.rm = TRUE),
    treatyr = unique(treatyr_sing)
  )

pta_model <- feols(treatyr ~ avg_mid, data = pta)
etable(pta_model, file = here::here("tables/pta.tex"), view = TRUE)
#-------------------------------------------------------------------------------
# plotting
#-------------------------------------------------------------------------------
ggplot(pta, aes(x = treatyr, y = avg_mid)) +
  geom_smooth(method = "lm", se = TRUE) + 
  ggthemes::theme_clean(base_size = 11) +
  theme(text = element_text(family = "Crimson Text")) + 
  labs(
    x = "Year of Regime Change",
    y = "Average Change of Militarized Interstate Dispute's Possibility",
    caption = "Source: COW MIDs Dataset"
  )
ggsave(filename = here::here("plots/paratrend.png"), device = "png", limitsize = FALSE, dpi = 300)


fractions = dyadyrs %>% 
  group_by(year) %>% 
  summarize(
    dyads = n_distinct(id),
    indyads = sum(regcha_uni, na.rm=TRUE),
    fracmid = mean(cowmidonset, na.rm=TRUE))

ggplot(data=fractions,aes(x=year)) + 
  ggthemes::theme_clean(base_size=11) + 
  xlab("Year") +
  #geom_line(aes(y=fracmid), col="darkred") +
  geom_line(aes(y=indyads*0.01), col="blue") +
  scale_y_continuous(
    name="Fraction Default")
    #sec.axis = sec_axis(~./0.01,name="Number in Bureau"))
```

## Cross-sectional Endogeneity Test

```{r}
cset <- dyadyrs %>%
  group_by(id)  %>%
  summarise(
    treatyr = unique(treatyr_sing),
    avg_kappava = mean(kappava, na.rm = TRUE),
    alliance = mean(alliance, na.rm = TRUE),
    major = mean(major, na.rm = TRUE),
    rivalry = mean(ongoingrivalry, na.rm = TRUE),
    avg_gdppc = mean(gdppc, na.rm = TRUE),
    avg_trade = mean(trade, na.rm = TRUE),
    avg_nmc = mean(nc, na.rm = TRUE),
  )

m <- feols(treatyr ~ avg_gdppc, data = cset)
a <- feols(treatyr ~ avg_trade, data = cset)
y <- feols(treatyr ~ avg_nmc, data = cset)
d <- feols(treatyr ~ major, data = cset)
r <- feols(treatyr ~ alliance, data = cset)
t <- feols(treatyr ~ rivalry, data = cset)

etable(m, a, y, d, r, t, view = TRUE, file = here::here("tables/cset.tex"))
```

## TWFE

```{r TWFE}
twfe1 <- feols(cowmidonset ~ regcha_uni | 
              ccode1 + ccode2 + year, 
              cluster = c("year", "ccode1", "ccode2"), data = dyadyrs)

twfe2 <- feols(cowmidonset ~ regcha_uni  + 
                kappava + regcha_uni:kappava | 
              ccode1 + ccode2 + year, 
              cluster = c("year", "ccode1", "ccode2"), data = dyadyrs)

twfe3 <- feols(cowmidonset ~ regcha_uni  + 
                kappava + regcha_uni:kappava +
                 ongoingrivalry + 
                 alliance + 
                 major + 
                 mindist + I(mindist^2) +
                 trade_dyd + gdppc_dyd + nmc_dyd | 
              ccode1 + ccode2 + year, 
              cluster = c("year", "ccode1", "ccode2"), data = dyadyrs)

twfe4 <- feols(cowmidonset ~ regcha_uni  + 
                kappava + regcha_uni:kappava +
                 ongoingrivalry + 
                 alliance + 
                 major + 
                 mindist + I(mindist^2) +
                 trade_dyd + gdppc_dyd + nmc_dyd | 
              id + year, 
              cluster = c("year", "id"), data = dyadyrs)

twfe5 <- feols(cowmidonset ~ regcha_uni  + 
                kappava + regcha_uni:kappava +
                 ongoingrivalry + regcha_uni:ongoingrivalry +
                 alliance + regcha_uni:alliance +
                 major + 
                 mindist + regcha_uni:mindist + I(mindist^2) + regcha_uni:I(mindist^2) +
                 trade_dyd + gdppc_dyd + 
                   nmc_dyd + regcha_uni:nmc_dyd | 
              ccode1 + ccode2 + year, 
              cluster = c("year", "ccode1", "ccode2"), data = dyadyrs)
etable(twfe2, twfe4, twfe3, twfe5, view = TRUE, file = here::here("tables/twfe.tex"))
```

## Event Study

```{r Event Study, Manually}
#-------------------------------------------------------------------------------
# creating tau and TWFE
#-------------------------------------------------------------------------------
es <- dyadyrs %>%
  mutate(
    tau = year - treatyr_sing,
  )
es_reg <- feols(cowmidonset ~ factor(tau) + 
                  kappava + factor(tau):kappava + 
                  ongoingrivalry + 
                  alliance + 
                  major + 
                  mindist + I(mindist^2) +
                  trade_dyd + gdppc_dyd + nmc_dyd 
                  | ccode1 + ccode2 + year, 
                cluster = c("year", "ccode1", "ccode2"), 
                data = filter(es, tau >= -10 & tau <= 10))

etable(es_reg, file = here::here("tables/esreg.tex"), view = TRUE)
es_regdat <- as_tibble(es_reg$coeftable)
#-------------------------------------------------------------------------------
# plotting leads & lags
#-------------------------------------------------------------------------------
# regime change
es_regdat_rg <- es_regdat[1:20,]
es_regdat_rg$tau = -9:10
es_regdat_rg$Est = es_regdat_rg$Estimate-es_regdat_rg$Estimate[es_regdat_rg$tau==0]

ggplot(data = es_regdat_rg, aes(x = tau, y = Est)) + 
  theme_minimal(base_size = 11) + 
  theme(text = element_text(family = "Crimson Text"))+
  xlab("Years Pre/Post Entry") + 
  ylab("Militarized Interstate Dispute") +
  labs(
    caption = "Correlates of War (CoW) Militarized Interstate Dispute (MID) project. (V5.0)"
  ) +
     geom_point() + 
  geom_errorbar(aes(ymax = Est+1.96*`Std. Error`, 
                    ymin = Est-1.96*`Std. Error`)) +
  geom_vline(xintercept = 0, 
             col = "darkred", lty = "dashed") + 
  geom_hline(yintercept = 0, 
             col = "darkgrey") +
  geom_smooth(data = subset(es_regdat_rg, tau < 0), se = TRUE) + 
  geom_smooth(data = subset(es_regdat_rg, tau >= 0), se = TRUE)
ggsave(filename = here::here("plots/leadslags.png"), device = "png", 
       width =5, height = 3, units = "in", limitsize = FALSE, dpi = 300)
#-------------------------------------------------------------------------------
# Sensitivity Test for Regime Change
#-------------------------------------------------------------------------------
betahat_rg <- summary(es_reg)$coefficients #save the coefficients
sigma_rg <- summary(es_reg)$cov.scaled #save the covariance matrix
betahat_rg <- betahat_rg[1:20]
sigma_rg <- sigma_rg[1:20, 1:20]

delta_rm_results_rg <- 
HonestDiD::createSensitivityResults_relativeMagnitudes(
                                    betahat = betahat_rg, #coefficients
                                    sigma = sigma_rg, #covariance matrix
                                    numPrePeriods = 9, #num. of pre-treatment coefs
                                    numPostPeriods = 11, #num. of post-treatment coefs
                                    Mbarvec = seq(0.5,2,by=0.5),
                                    parallel = TRUE#values of Mbar
                                    )

delta_rm_results_rg
originalResults_rg <- HonestDiD::constructOriginalCS(betahat = betahat_rg,
                                                  sigma = sigma_rg,
                                                  numPrePeriods = 9,
                                                  numPostPeriods = 11
                                                  )

rgplot <- HonestDiD::createSensitivityPlot_relativeMagnitudes(delta_rm_results_rg, originalResults_rg)
rgplot <- rgplot + theme(text = element_text(family = "Crimson Text", size = 11))
ggsave(
  filename = here::here("plots/similarity_rg.png"), device = "png", limitsize = FALSE, dpi = 300, plot = rgplot, width =5, height = 3, units = "in"
  )
#-------------------------------------------------------------------------------
# plotting leads & lags
#-------------------------------------------------------------------------------
# interactive term
es_regdat_fpsi <- es_regdat[30:49,]
es_regdat_fpsi$tau = -9:10
es_regdat_fpsi$Est = es_regdat_fpsi$Estimate-es_regdat_fpsi$Estimate[es_regdat_fpsi$tau==0]

ggplot(data = es_regdat_fpsi, aes(x = tau, y = Est)) + 
  theme_minimal(base_size = 10) + 
  theme(text = element_text(family = "Crimson Text"))+
  xlab("Years Pre/Post Entry") + 
  ylab("Militarized Interstate Dispute") +
  labs(
    caption = "Correlates of War (CoW) Militarized Interstate Dispute (MID) project. (V5.0)"
  ) +
     geom_point() + 
  geom_errorbar(aes(ymax = Est+1.96*`Std. Error`, 
                    ymin = Est-1.96*`Std. Error`)) +
  geom_vline(xintercept = 0, 
             col = "darkred", lty = "dashed") + 
  geom_hline(yintercept = 0, 
             col = "darkgrey") +
  geom_smooth(data = subset(es_regdat_fpsi, tau < -1), se = TRUE) + 
  geom_smooth(data = subset(es_regdat_fpsi, tau >= -1), se = TRUE)
ggsave(filename = here::here("plots/leadslags_fpsi.png"), device = "png", width =5, height = 3, units = "in", limitsize = FALSE, dpi = 300)
#-------------------------------------------------------------------------------
# Sensitivity Test for FPSI
#-------------------------------------------------------------------------------
betahat_fpsi <- summary(es_reg)$coefficients #save the coefficients
sigma_fpsi <- summary(es_reg)$cov.scaled #save the covariance matrix
betahat_fpsi <- betahat_fpsi[30:49]
sigma_fpsi <- sigma_fpsi[30:49, 30:49]

delta_rm_results_fpsi <- 
HonestDiD::createSensitivityResults_relativeMagnitudes(
                                    betahat = betahat_fpsi, #coefficients
                                    sigma = sigma_fpsi, #covariance matrix
                                    numPrePeriods = 9, #num. of pre-treatment coefs
                                    numPostPeriods = 11, #num. of post-treatment coefs
                                    Mbarvec = seq(0.5,2,by=0.5),
                                    parallel = TRUE#values of Mbar
                                    )

delta_rm_results_fpsi
originalResults_fpsi <- HonestDiD::constructOriginalCS(betahat = betahat,
                                                  sigma = sigma,
                                                  numPrePeriods = 9,
                                                  numPostPeriods = 11)

fpsiplot <- HonestDiD::createSensitivityPlot_relativeMagnitudes(delta_rm_results_fpsi, originalResults_fpsi)
fpsiplot <- fpsiplot + theme(text = element_text(family = "Crimson Text", size = 11))
ggsave(
  filename = here::here("plots/similarity_fpsi.png"), device = "png", limitsize = FALSE, dpi = 300, plot = rgplot, width =5, height = 3, units = "in"
  )

```

```{r Mediation Analysis}
covariates <- c("alliance", 
                "major", "ongoingrivalry", 
                "mindist",
                "gdppc_dyd", "trade_dyd", "nmc_dyd")

media_test <- feols(c(alliance, 
                      major, ongoingrivalry, 
                      mindist, I(mindist^2),
                      gdppc_dyd, trade_dyd, nmc_dyd) ~ regcha_uni | 
                      year + ccode1 + ccode2, data = dyadyrs)
etable(media_test)
# stevemisc::show_ranef(media_test)
```
